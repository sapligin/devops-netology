---
- name: Installing Mysql and dependencies
  apt:
   name: "{{ item }}"
   state: present
   update_cache: yes
  loop:
   - mysql-server
   - mysql-client
   - python3-mysqldb
   - libmysqlclient-dev
  become: yes
- name: start and enable mysql service
  service:
    name: mysql
    state: started
    enabled: yes

- name: update mysql root password for all root accounts
  become: true
  mysql_user:
    name: root
    host: "{{ item }}"
    password: "{{ mysql_root_password }}"
    login_user: root
    login_password: "{{ mysql_root_password }}"
    check_implicit_admin: yes
    priv: "*.*:ALL,GRANT"
  with_items:
  - "{{ ansible_hostname }}"
  - 127.0.0.1
  - ::1
  - localhost

- name: Create .my.cnf
  become: true
  template:
   src: "templates/.my.cnf.j2"
   dest: "/home/ubuntu/.my.cnf"
   owner: ubuntu
   group: ubuntu
   mode: 0600

- name: creating db
  mysql_db:
     name: "{{ db_name }}"
     state: present

- name: creating mysql user
  mysql_user:
     name: "{{ db_user }}"
     password: "{{ db_pass }}"
     priv: "{{ db_name }}.*:ALL"
     host: '%'
     state: present

- name: Enable remote login to mysql
  become: true
  lineinfile:
     path: /etc/mysql/mysql.conf.d/mysqld.cnf
     regexp: '^bind-address'
     line: 'bind-address = 0.0.0.0'
     backup: yes
  notify:
    - Restart mysql
#- name: Find MySQL root password
#  become: yes
#  ansible.builtin.shell: "echo `grep 'temporary.*root@localhost' /var/log/mysqld.log | sed 's/.*root@localhost: //'`"
#  register: mysql_tmp_root_pass
#
##Detect and properly set root password
#- name: Detect and properly set root password - master
#  block:
#  - name: Detect .my.cnf file
#    stat:
#      path: ~/.my.cnf
#    register: result
#  - name: File .my.cnf exists
#    mysql_user:
#      name: root
#      password: "{{ mysql_root_pass }}"
#    when: result.stat.exists == true
#  - name: Set new password from temporary password
#    shell: 'mysql -e "SET PASSWORD = PASSWORD(''{{ mysql_root_pass }}'');" --connect-expired-password -uroot -p"{{ mysql_tmp_root_pass.stdout }}"'
#    when: result.stat.exists == false
#  become: true
#
#- name: Create .my.cnf
#  become: yes
#  template:
#   src: "templates/.my.cnf.j2"
#   dest: "~/.my.cnf"
#   owner: root
#   group: root
#   mode: 0600
#
#- name: creating mysql user (wordpress)
#  mysql_user:
#    name: "{{ db_user }}"
#    password: "{{ db_pass }}"
#    priv: '*.*:ALL'
#    host: '%'
#    state: present
#- name: creating wordpress db
#  mysql_db:
#    name: "{{ db_name }}"
#    state: present
#- name: Enable remote login to mysql
#  lineinfile:
#     path: /etc/mysql/mysql.conf.d/mysqld.cnf
#     regexp: '^bind-address'
#     line: 'bind-address = 0.0.0.0'
#     backup: yes
#  notify: Restart mysql

#- name: Скачиваем MySQL
#  get_url:
#    url: https://dev.mysql.com/get/mysql-apt-config_0.8.23-1_all.deb
#    dest: "/tmp"
#    mode: 0440
#
#- name: Устанавливаем MySQL
#  apt: "deb=/tmp/mysql-apt-config_0.8.23-1_all.deb"
#  become: true
#  with_items:
#      - mysql-community-server
#      - mysql-community-client
#      - MySQL-python
#
#- name: Ensure mysql service is running
#  become: yes
#  systemd:
#    name: mysqld
#    state: started
#    enabled: yes